"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const luxon_1 = require("luxon");
const plural_ru_1 = require("plural-ru");
const moonCalc_1 = require("./moonCalc");
function createMoonMessage({ moonDay, timeZone, calculationDate }) {
    const { dayNumber, dayStart, dayEnd } = moonDay;
    const { symbol, label } = moonCalc_1.getMoonPhaseEmojiAndLabelByDate(calculationDate);
    return `üåù –õ—É–Ω–∞:
${symbol} –¥–µ–Ω—å: *${dayNumber}* - ${label}
üé≠ —Ç–∏–ø –¥–Ω—è: _${getMoonDayType(moonDay.dayNumber)}_
üö¶ –Ω–∞—á–∏–Ω–∞–Ω–∏—è: _${getBeginningsRecommendation(moonDay.dayNumber)}_  
‚è≥ –Ω–∞—á–∞–ª–æ: _${dayStart
        .setZone(timeZone)
        .setLocale('ru')
        .toLocaleString(luxon_1.DateTime.DATETIME_SHORT)}_
‚åõÔ∏è –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ: _${dayEnd
        .setZone(timeZone)
        .setLocale('ru')
        .toLocaleString(luxon_1.DateTime.DATETIME_SHORT)}_  
`;
}
exports.createMoonMessage = createMoonMessage;
function createSolarMessage({ sunRiseToday, sunSetToday, dayDurationDiff, timeZone, }) {
    const dayLength = sunSetToday.diff(sunRiseToday);
    return `‚òÄÔ∏è –°–≤–µ—Ç–æ–≤–æ–π –¥–µ–Ω—å:
üåÖ ${sunRiseToday.setZone(timeZone).toLocaleString(luxon_1.DateTime.TIME_24_SIMPLE)} - ${sunSetToday.setZone(timeZone).toLocaleString(luxon_1.DateTime.TIME_24_SIMPLE)} (${getDayDurationMsg(dayLength)})
‚è± ${getDayDurationDiffMsg(dayDurationDiff)}\n`;
}
exports.createSolarMessage = createSolarMessage;
function createCalendarMessage(googleCalendarEvent) {
    const { summary = '', description = '' } = googleCalendarEvent;
    let message = '';
    if (summary) {
        message += summary;
    }
    if (description) {
        message += `\n${description}`;
    }
    return message;
}
exports.createCalendarMessage = createCalendarMessage;
function createStartMessage() {
    return `–ü—Ä–∏–≤–µ—Ç
–ë—É–¥—É –æ–ø–æ–≤–µ—â–∞—Ç—å —Ç–µ–±—è –æ –Ω–∞—á–∞–ª–µ –Ω–æ–≤–æ–≥–æ –ª—É–Ω–Ω–æ–≥–æ –¥–Ω—è –∏ –º–µ—Å—è—Ü–∞, —Ñ–∞–∑–∞—Ö –ª—É–Ω—ã, –∏ –¥—Ä—É–≥–∏—Ö –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —Ü–∏–∫–ª–∞—Ö –Ω–∞—à–µ–π –ø–ª–∞–Ω–µ—Ç—ã
–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/location - –∑–∞–¥–∞—Ç—å —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
/day - –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –¥–Ω–µ`;
}
exports.createStartMessage = createStartMessage;
function createHelpMessage() {
    return ('–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é –∏ —è —Å–∫–∞–∂—É —Ç–µ–±–µ –∫–∞–∫–æ–π –≤ —ç—Ç–æ–π —Ç–æ—á–∫–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ —Å–µ–π—á–∞—Å –ª—É–Ω–Ω—ã–π –¥–µ–Ω—å\n' +
        '–ë—É–¥—É –æ–ø–æ–≤–µ—â–∞—Ç—å —Ç–µ–±—è –æ –Ω–∞—á–∞–ª–µ –Ω–æ–≤–æ–≥–æ –ª—É–Ω–Ω–æ–≥–æ –¥–Ω—è, –∏ –º–µ—Å—è—Ü–∞, —Ñ–∞–∑–∞—Ö –ª—É–Ω—ã, –∏ –¥—Ä—É–≥–∏—Ö –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —Ü–∏–∫–ª–∞—Ö –Ω–∞—à–µ–π –ø–ª–∞–Ω–µ—Ç—ã\n' +
        '–ï—Å–ª–∏ –Ω–µ —É–¥–∞—ë—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é, –ø—Ä–æ–≤–µ—Ä—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö, —á—Ç–æ —É —Ç–µ–ª–µ–≥—Ä–∞–º –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ gps');
}
exports.createHelpMessage = createHelpMessage;
function getMoonDayType(moonDayNumber) {
    if ([1, 6, 11, 16, 21, 26].indexOf(moonDayNumber) > -1)
        return '—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ üëå';
    if ([2, 7, 12, 17, 22, 27].indexOf(moonDayNumber) > -1)
        return '–º—É–¥—Ä–µ—Ü ü§ù';
    if ([3, 8, 13, 18, 23, 28].indexOf(moonDayNumber) > -1)
        return '–ø–æ–±–µ–¥–∏—Ç–µ–ª—å ‚úä';
    if ([4, 9, 14, 19, 24, 29].indexOf(moonDayNumber) > -1)
        return '–ø—É—Å—Ç—ã–µ —Ä—É–∫–∏ ü§≤';
    if ([5, 10, 15, 20, 25, 30].indexOf(moonDayNumber) > -1)
        return '–ø–æ–ª–Ω–æ—Ç–∞ üôè';
    return '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
}
function getBeginningsRecommendation(moonDayNumber) {
    if ([1, 6, 11, 16, 21, 26].indexOf(moonDayNumber) > -1)
        return '–Ω–æ—Ä–º–∞ ‚èØÔ∏è';
    if ([2, 7, 12, 17, 22, 27].indexOf(moonDayNumber) > -1)
        return '–Ω–æ—Ä–º–∞ ‚èØÔ∏è';
    if ([3, 8, 13, 18, 23, 28].indexOf(moonDayNumber) > -1)
        return '—Ö–æ—Ä–æ—à–æ ‚ñ∂Ô∏è';
    if ([4, 9, 14, 19, 24, 29].indexOf(moonDayNumber) > -1)
        return '—Ç–∞–∫–æ–µ ‚è∏';
    if ([5, 10, 15, 20, 25, 30].indexOf(moonDayNumber) > -1)
        return '—Ö–æ—Ä–æ—à–æ ‚ñ∂Ô∏è';
    return '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
}
function getDayDurationDifference(sunTimesToday, sunTimesYtd) {
    const sunRiseToday = luxon_1.DateTime.fromJSDate(sunTimesToday.sunrise);
    const sunSetToday = luxon_1.DateTime.fromJSDate(sunTimesToday.sunset);
    const dayLengthToday = sunSetToday.diff(sunRiseToday);
    const sunRiseYtd = luxon_1.DateTime.fromJSDate(sunTimesYtd.sunrise);
    const sunSetYtd = luxon_1.DateTime.fromJSDate(sunTimesYtd.sunset);
    const dayLengthYtd = sunSetYtd.diff(sunRiseYtd);
    return dayLengthToday.minus(dayLengthYtd);
}
exports.getDayDurationDifference = getDayDurationDifference;
function getDayDurationDiffMsg(duration) {
    const directionWord = duration.as('milliseconds') > 0 ? '–±–æ–ª—å—à–µ' : '–º–µ–Ω—å—à–µ';
    let { minutes, seconds } = duration.shiftTo('minutes', 'seconds');
    minutes = Math.ceil(Math.abs(minutes));
    seconds = Math.ceil(Math.abs(seconds));
    return `–¥–µ–Ω—å –Ω–∞ ${minutes} ${plural_ru_1.noun(minutes, '–º–∏–Ω—É—Ç–∞', '–º–∏–Ω—É—Ç—ã', '–º–∏–Ω—É—Ç')} ${seconds} ${plural_ru_1.noun(seconds, '—Å–µ–∫—É–Ω–¥–∞', '—Å–µ–∫—É–Ω–¥—ã', '—Å–µ–∫—É–Ω–¥')} ${directionWord} —á–µ–º –≤—á–µ—Ä–∞`;
}
function getDayDurationMsg(duration) {
    let { hours, minutes } = duration.shiftTo('hours', 'minutes');
    hours = Math.ceil(Math.abs(hours));
    minutes = Math.ceil(Math.abs(minutes));
    return `${hours} ${plural_ru_1.noun(minutes, '—á–∞—Å', '—á–∞—Å–∞', '—á–∞—Å–æ–≤')} ${minutes} ${plural_ru_1.noun(minutes, '–º–∏–Ω—É—Ç–∞', '–º–∏–Ω—É—Ç—ã', '–º–∏–Ω—É—Ç')}`;
}
