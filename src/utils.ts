import { DateTime } from 'luxon'
import { calendar_v3 } from 'googleapis'
import Schema$Event = calendar_v3.Schema$Event

import { getMoonPhaseEmojiAndLabel } from './moonCalc'
import { IMoonDay } from './interfaces'

export function createMoonMessage({ moonDay, timeZone }: { moonDay: IMoonDay; timeZone: string }): string {
  const { dayNumber, dayStart, dayEnd } = moonDay

  const { symbol, label } = getMoonPhaseEmojiAndLabel(dayNumber)

  return `üåù –õ—É–Ω–∞:
${symbol} –¥–µ–Ω—å: *${dayNumber}* - ${label}
üé≠ —Ç–∏–ø –¥–Ω—è: _${getMoonDayType(moonDay.dayNumber)}_
üö¶ –Ω–∞—á–∏–Ω–∞–Ω–∏—è: _${getBeginningsRecommendation(moonDay.dayNumber)}_  
‚è≥ –Ω–∞—á–∞–ª–æ: _${dayStart
    .setZone(timeZone)
    .setLocale('ru')
    .toLocaleString(DateTime.DATETIME_SHORT)}_
‚åõÔ∏è –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ: _${dayEnd
    .setZone(timeZone)
    .setLocale('ru')
    .toLocaleString(DateTime.DATETIME_SHORT)}_  
`
}

export function createSolarMessage({
  sunRiseToday,
  sunSetToday,
  dayPercent,
  nightPercent,
  timeZone,
}: {
  sunRiseToday: DateTime
  sunSetToday: DateTime
  dayPercent: number
  nightPercent: number
  timeZone: string
}): string {
  return `‚òÄÔ∏è –°–æ–ª–Ω—Ü–µ:
üåÖ –≤–æ—Å—Ö–æ–¥:\t ${sunRiseToday.setZone(timeZone).toLocaleString(DateTime.TIME_24_SIMPLE)}
üåá –∑–∞–∫–∞—Ç:\t ${sunSetToday.setZone(timeZone).toLocaleString(DateTime.TIME_24_SIMPLE)}
üèôÔ∏è –¥–Ω—è:\t ${dayPercent.toFixed(1)} %
üåÉ –Ω–æ—á–∏:\t ${nightPercent.toFixed(1)} %\n`
}

export function createCalendarMessage(googleCalendarEvent: Schema$Event): string {
  const { summary = '', description = '' } = googleCalendarEvent
  let message = ''
  if (summary) {
    message += summary
  }
  if (description) {
    message += `\n${description}`
  }
  return message
}

export function createStartMessage(): string {
  return `–ü—Ä–∏–≤–µ—Ç
–ë—É–¥—É –æ–ø–æ–≤–µ—â–∞—Ç—å —Ç–µ–±—è –æ –Ω–∞—á–∞–ª–µ –Ω–æ–≤–æ–≥–æ –ª—É–Ω–Ω–æ–≥–æ –¥–Ω—è –∏ –º–µ—Å—è—Ü–∞, —Ñ–∞–∑–∞—Ö –ª—É–Ω—ã, –∏ –¥—Ä—É–≥–∏—Ö –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —Ü–∏–∫–ª–∞—Ö –Ω–∞—à–µ–π –ø–ª–∞–Ω–µ—Ç—ã
–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/location - –∑–∞–¥–∞—Ç—å —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
/day - –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –¥–Ω–µ`
}

export function createHelpMessage(): string {
  return (
    '–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é –∏ —è —Å–∫–∞–∂—É —Ç–µ–±–µ –∫–∞–∫–æ–π –≤ —ç—Ç–æ–π —Ç–æ—á–∫–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ —Å–µ–π—á–∞—Å –ª—É–Ω–Ω—ã–π –¥–µ–Ω—å\n' +
    '–ë—É–¥—É –æ–ø–æ–≤–µ—â–∞—Ç—å —Ç–µ–±—è –æ –Ω–∞—á–∞–ª–µ –Ω–æ–≤–æ–≥–æ –ª—É–Ω–Ω–æ–≥–æ –¥–Ω—è, –∏ –º–µ—Å—è—Ü–∞, —Ñ–∞–∑–∞—Ö –ª—É–Ω—ã, –∏ –¥—Ä—É–≥–∏—Ö –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —Ü–∏–∫–ª–∞—Ö –Ω–∞—à–µ–π –ø–ª–∞–Ω–µ—Ç—ã\n' +
    '–ï—Å–ª–∏ –Ω–µ —É–¥–∞—ë—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é, –ø—Ä–æ–≤–µ—Ä—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö, —á—Ç–æ —É —Ç–µ–ª–µ–≥—Ä–∞–º –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ gps'
  )
}

export function getPercentRelation(values: number[]): number[] {
  const hundredPercent = values.reduce((acc, val) => acc + val, 0)
  return values.map(value => (value * 100) / hundredPercent)
}

function getMoonDayType(moonDayNumber: number): string {
  if ([1, 6, 11, 16, 21, 26].indexOf(moonDayNumber) > -1) return '—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ üëå'
  if ([2, 7, 12, 17, 22, 27].indexOf(moonDayNumber) > -1) return '–º—É–¥—Ä–µ—Ü ü§ù'
  if ([3, 8, 13, 18, 23, 28].indexOf(moonDayNumber) > -1) return '–ø–æ–±–µ–¥–∏—Ç–µ–ª—å ‚úä'
  if ([4, 9, 14, 19, 24, 29].indexOf(moonDayNumber) > -1) return '–ø—É—Å—Ç—ã–µ —Ä—É–∫–∏ ü§≤'
  if ([5, 10, 15, 20, 25, 30].indexOf(moonDayNumber) > -1) return '–ø–æ–ª–Ω–æ—Ç–∞ üôè'
  return '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
}

function getBeginningsRecommendation(moonDayNumber: number): string {
  if ([1, 6, 11, 16, 21, 26].indexOf(moonDayNumber) > -1) return '–Ω–æ—Ä–º–∞ ‚èØÔ∏è'
  if ([2, 7, 12, 17, 22, 27].indexOf(moonDayNumber) > -1) return '–Ω–æ—Ä–º–∞ ‚èØÔ∏è'
  if ([3, 8, 13, 18, 23, 28].indexOf(moonDayNumber) > -1) return '—Ö–æ—Ä–æ—à–æ ‚ñ∂Ô∏è'
  if ([4, 9, 14, 19, 24, 29].indexOf(moonDayNumber) > -1) return '—Ç–∞–∫–æ–µ ‚è∏'
  if ([5, 10, 15, 20, 25, 30].indexOf(moonDayNumber) > -1) return '—Ö–æ—Ä–æ—à–æ ‚ñ∂Ô∏è'
  return '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
}
